name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: read
  packages: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies (root)
        run: pnpm install

      - name: Install dependencies (api)
        working-directory: ./api
        run: pnpm install

      - name: Install dependencies (thread)
        working-directory: ./thread
        run: pnpm install

      - name: Install dependencies (sender)
        working-directory: ./sender
        run: pnpm install

      - name: Run lint (api)
        working-directory: ./api
        run: pnpm run lint

      - name: Run lint (thread)
        working-directory: ./thread
        run: pnpm run lint

      - name: Run lint (sender)
        working-directory: ./sender
        run: pnpm run lint

  build-and-push:
    runs-on: ubuntu-latest
    needs: lint
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push API image
        working-directory: ./api
        run: |
          IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}/api" | tr '[:upper:]' '[:lower:]')
          docker build -t ${IMAGE_NAME}:${{ github.sha }} -t ${IMAGE_NAME}:latest .
          docker push ${IMAGE_NAME} --all-tags

      - name: Build and push Thread image
        working-directory: ./thread
        run: |
          IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}/thread" | tr '[:upper:]' '[:lower:]')
          docker build -t ${IMAGE_NAME}:${{ github.sha }} -t ${IMAGE_NAME}:latest .
          docker push ${IMAGE_NAME} --all-tags

      - name: Build and push Sender image
        working-directory: ./sender
        run: |
          IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}/sender" | tr '[:upper:]' '[:lower:]')
          docker build -t ${IMAGE_NAME}:${{ github.sha }} -t ${IMAGE_NAME}:latest .
          docker push ${IMAGE_NAME} --all-tags

  deploy-vps:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy docker-compose.yml to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "~/project/anonymous-forum-2/"

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/project/anonymous-forum-2
            docker-compose down
            docker-compose pull
            docker-compose up -d
